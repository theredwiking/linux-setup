#!/bin/bash
#________________________________________________________________
#░██╗░░░░░░░██╗██╗██╗░░██╗██╗███╗░░██╗░██████╗░  ░█████╗░░██████╗
#░██║░░██╗░░██║██║██║░██╔╝██║████╗░██║██╔════╝░  ██╔══██╗██╔════╝
#░╚██╗████╗██╔╝██║█████═╝░██║██╔██╗██║██║░░██╗░  ██║░░██║╚█████╗░
#░░████╔═████║░██║██╔═██╗░██║██║╚████║██║░░╚██╗  ██║░░██║░╚═══██╗
#░░╚██╔╝░╚██╔╝░██║██║░╚██╗██║██║░╚███║╚██████╔╝  ╚█████╔╝██████╔╝
#░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░  ░╚════╝░╚═════╝░
#________________________________________________________________

# Functions

{
    function confirm() {
        read -p "$1? [Y|y|n] " -n 1 -r
        echo ""
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    }

    ubuntuppa() {
        sudo add-apt-repository ppa:aslatter/ppa -y
    }

    debianalacritty() {
        wget https://github.com/barnumbirr/alacritty-debian/releases/download/v0.10.0-rc1-1/alacritty_0.10.0-rc1-1_amd64_bullseye.deb
    }

    vimplugins() {
        sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

    }

    install() {
        sudo apt -y install $1
    }

    remove() {
        sudo apt-get -y remove --auto-remove $1
    }

    purge() {
        sudo apt-get -y remove --auto-remove --purge $1
    }

    # Script
    sudo echo "sudo successfully"

    echo "░██╗░░░░░░░██╗██╗██╗░░██╗██╗███╗░░██╗░██████╗░  ░█████╗░░██████╗
    ░██║░░██╗░░██║██║██║░██╔╝██║████╗░██║██╔════╝░  ██╔══██╗██╔════╝
    ░╚██╗████╗██╔╝██║█████═╝░██║██╔██╗██║██║░░██╗░  ██║░░██║╚█████╗░
    ░░████╔═████║░██║██╔═██╗░██║██║╚████║██║░░╚██╗  ██║░░██║░╚═══██╗
    ░░╚██╔╝░╚██╔╝░██║██║░╚██╗██║██║░╚███║╚██████╔╝  ╚█████╔╝██████╔╝
    ░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░  ░╚════╝░╚═════╝░"

    echo "-------------------------------"
    echo "---     Checking Distro     ---"
    echo "-------------------------------"

    DISTRO=$(lsb_release -i | cut -d: -f2 | sed s/'^\t'//)
    VERSION=$(lsb_release -r | cut -d: -f2 | sed s/'^\t'//)
    CODENAME=$(lsb_release -c | cut -d: -f2 | sed s/'^\t'//)

    echo "Distro:" $DISTRO
    echo "Version:" $VERSION
    echo "Codename:" $CODENAME

    echo "------------------------------"
    echo "---    Update & Upgrade    ---"
    echo "------------------------------"

    sudo apt update && sudo apt upgrade -y && sudo apt autoremove

    echo "------------------------------"
    echo "---       Adding PPA       ---"
    echo "------------------------------"

    echo "aslatter/ppa"

    confirm "Want to continue"

    if [ "$DISTRO" = "Pop" ]; then
        if [ "$VERSION" > "20.10"]; then
            echo "Not need"
        else
            ubuntuppa
        fi
    elif [ "$DISTRO" = "Ubuntu" ]; then
        ubuntuppa
    elif [ "$DISTRO" = "Debian" ]; then
        debianalacritty
    fi

    echo "------------------------------"
    echo "---      Installation      ---"
    echo "------------------------------"

    PACKAGES="alacritty xinit awesome wget curl zsh neovim lolcat figlet suckless-tools dmenu"

    echo $PACKAGES

    confirm "Want to continue"

    for package in $PACKAGES; do
        install $package
    done

    echo "------------------------------"
    echo "---     Removing Gnome     ---"
    echo "------------------------------"

    GNOME_PACKAGES="ubuntu-gnome-desktop gnome-shell"

    for package in $GNOME_PACKAGES; do
        purge $package
    done

    sudo apt autoremove

    echo "-------------------------------"
    echo "---         Configs         ---"
    echo "-------------------------------"

    echo "Cloning dotfiles"

    DOT=$HOME/dotfiles

    git clone https://github.com/theredwiking/dotfiles $DOT

    cp -r $DOT/config $HOME/.config

    echo "awesome" > $HOME/.xinitrc

    echo "-------------------------------"
    echo "---           ZSH           ---"
    echo "-------------------------------"

    echo "Installing and configuring zsh"

    sudo usermod -s $(which zsh) $USER

    sudo echo 'export ZDOTDIR="$HOME/.config/zsh"' >> $HOME/.zshenv

    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" "" --unattended

    mv $HOME/.oh-my-zsh $HOME/.config/

    rm $HOME/.zshrc

    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.config/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.config/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.config/.oh-my-zsh/custom}/themes/powerlevel10k

    echo "-------------------------------"
    echo "---         Awesome         ---"
    echo "-------------------------------"

    git clone https://github.com/streetturtle/awesome-wm-widgets.git $HOME/.config/awesome/awesome-wm-widgets

    git clone https://github.com/streetturtle/awesome-buttons.git $HOME/.config/awesome/awesome-buttons

    echo "-------------------------------"
    echo "---           Nvm           ---"
    echo "-------------------------------"

    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash

    source ~/.config/zsh/.zshrc

    nvm install lts/gallium

    nvm use lts/gallium
}